{"remainingRequest":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\mmak\\KJSP\\kwproductsapp\\src\\components\\Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\src\\components\\Login.vue","mtime":1607450143853},{"path":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mmak\\KJSP\\kwproductsapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"login\">\n   <!-- Using vuefire (the official Firebase binding) -->\n   <div id=\"app\">\n    <ul is=\"transition-group\">\n      <li v-for=\"user in users\" class=\"user\" :key=\"user['.key']\">\n        <span>{{user.name}} - {{user.email}}</span>\n        <button v-on:click=\"removeUser(user)\">X</button>\n      </li>\n    </ul>\n    <form id=\"form\" v-on:submit.prevent=\"addUser\">\n      <input type=\"text\" v-model=\"newUser.name\" placeholder=\"Username\" />\n      <input\n        type=\"email\"\n        v-model=\"newUser.email\"\n        placeholder=\"email@email.com\"\n      />\n      <input type=\"submit\" value=\"Add User\" />\n    </form>\n    <ul class=\"errors\">\n      <li v-show=\"!validation.name\">Name cannot be empty.</li>\n      <li v-show=\"!validation.email\">\n        Please provide a valid email address.\n      </li>\n    </ul>\n  </div>\n  </div>\n</template>\n\n<script>\n      var emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      // Setup Firebase\n      var config = {\n        apiKey: \"AIzaSyAi_yuJciPXLFr_PYPeU3eTvtXf8jbJ8zw\",\n        authDomain: \"vue-demo-537e6.firebaseapp.com\",\n        databaseURL: \"https://vue-demo-537e6.firebaseio.com\"\n      };\n      firebase.initializeApp(config);\n\n      var usersRef = firebase.database().ref(\"users\");\n\n      // create Vue app\n      var app = new Vue({\n        // element to mount to\n        el: \"#app\",\n        // initial data\n        data: {\n          newUser: {\n            name: \"\",\n            email: \"\"\n          }\n        },\n        // firebase binding\n        // https://github.com/vuejs/vuefire\n        firebase: {\n          users: usersRef\n        },\n        // computed property for form validation state\n        computed: {\n          validation: function() {\n            return {\n              name: !!this.newUser.name.trim(),\n              email: emailRE.test(this.newUser.email)\n            };\n          },\n          isValid: function() {\n            var validation = this.validation;\n            return Object.keys(validation).every(function(key) {\n              return validation[key];\n            });\n          }\n        },\n        // methods\n        methods: {\n          addUser: function() {\n            if (this.isValid) {\n              usersRef.push(this.newUser);\n              this.newUser.name = \"\";\n              this.newUser.email = \"\";\n            }\n          },\n          removeUser: function(user) {\n            usersRef.child(user[\".key\"]).remove();\n          }\n        }\n      });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}